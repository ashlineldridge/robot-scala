plugins {
    id 'scala'
    id 'com.github.maiflai.scalatest' version '0.16'
    id 'com.diffplug.gradle.spotless' version '3.4.1'
    id 'org.scoverage' version '2.1.0'
}

ext {
    scalaVersion = '2.12.2'
    scalaBuildVersion = '2.12'
}

group = 'robot'
version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations.all {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'log4j', module: 'log4j'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    compile "org.scala-lang:scala-library:${scalaVersion}"
    compile "com.typesafe.scala-logging:scala-logging_${scalaBuildVersion}:3.5.0"
    compile "co.fs2:fs2-core_${scalaBuildVersion}:0.9.7"
    compile "co.fs2:fs2-io_${scalaBuildVersion}:0.9.7"
    compile "com.github.pureconfig:pureconfig_${scalaBuildVersion}:0.7.2"
    compile "org.typelevel:cats_${scalaBuildVersion}:0.9.0"
    compile "io.monix:monix_${scalaBuildVersion}:2.3.0"
    compile "io.monix:monix-cats_${scalaBuildVersion}:2.3.0"
    compile "ch.qos.logback:logback-classic:1.1.7"
    compile "org.slf4j:jcl-over-slf4j:1.7.21"
    compile "org.slf4j:log4j-over-slf4j:1.7.21"

    testCompile "org.scalatest:scalatest_${scalaBuildVersion}:3.0.0"
    testRuntime 'org.pegdown:pegdown:1.6.0'

    scoverage "org.scoverage:scalac-scoverage-plugin_${scalaBuildVersion}:1.3.0"
    scoverage "org.scoverage:scalac-scoverage-runtime_${scalaBuildVersion}:1.3.0"
}

spotless {
    scala {
        scalafmt('1.1.0').configFile("${rootDir}/.scalafmt.conf")
        target '**/*.scala'
    }
    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore', '**/*.scala'
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
}

checkScoverage {
    minimumRate = 0.0
}

check.dependsOn(checkScoverage)

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}
